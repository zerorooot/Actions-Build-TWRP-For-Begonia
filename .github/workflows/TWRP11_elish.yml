name: TWRP11 Builder

on:
  #  release:
  #    types: [published]
  #  push:
  #    branches:
  #      - master
  #    paths:
  #      - '.config'
  #  schedule:
  #    - cron: 0 8 * * 5
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      crypto:
        description: "是否禁用加密模块，true or false"
        required: false
        default: "false"
  # watch:
  #   types: [started]
        
env:
  Rec_name: TWRP11
  Rec_ver: 3.5.2
  Rec_url: git://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git -b twrp-11
  device: elish
  DT_url: git@github.com:mujianwu/TWRP-xiaomi-elish.git
  DT_path: device/xiaomi/elish
  target: recoveryimage
  WorkSpace: WorkSpace
  TZ: Asia/Shanghai
  Author: zerorooot
  Enable_cache: false
  Enable_ccache: true
  Delete_old: false

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Initializing environment
        run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          docker rmi `docker images -q`
          sudo apt-get remove account-plugin-facebook account-plugin-flickr account-plugin-jabber account-plugin-salut account-plugin-twitter account-plugin-windows-live account-plugin-yahoo aisleriot brltty duplicity empathy empathy-common example-content gnome-accessibility-themes gnome-contacts gnome-mahjongg gnome-mines gnome-orca gnome-screensaver gnome-sudoku gnome-video-effects gnomine landscape-common libreoffice-avmedia-backend-gstreamer libreoffice-base-core libreoffice-calc libreoffice-common libreoffice-core libreoffice-draw libreoffice-gnome libreoffice-gtk libreoffice-impress libreoffice-math libreoffice-ogltrans libreoffice-pdfimport libreoffice-style-galaxy libreoffice-style-human libreoffice-writer libsane libsane-common mcp-account-manager-uoa python3-uno rhythmbox rhythmbox-plugins rhythmbox-plugin-zeitgeist sane-utils shotwell shotwell-common telepathy-gabble telepathy-haze telepathy-idle telepathy-indicator telepathy-logger telepathy-mission-control-5 telepathy-salut totem totem-common totem-plugins printer-driver-brlaser printer-driver-foo2zjs printer-driver-foo2zjs-common printer-driver-m2300w printer-driver-ptouch printer-driver-splix
          git config --global user.name "RC1844"
          git config --global user.email "1844766234@qq.com"      
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* 
          sudo -E apt-get clean 
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python gcc clang libssl-dev repo rsync flex curl  bison aria2
          sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+rx /usr/local/bin/repo

      - name: Sync recovery source
        run: |
          mkdir ${{env.WorkSpace}}
          cd ${{env.WorkSpace}}
          repo init --depth=1 -u  ${{env.Rec_url}}
          repo sync -j4
          git clone ${{ env.DT_url }} --depth=1 --single-branch ${{ env.DT_path }}


      - name: Disable Crypto
        if: (github.event.inputs.crypto == 'true' && github.event.inputs.crypto  != 'false') || contains(github.event.action, 'crypto')
        run: |
          cd ${{env.WorkSpace}}/${{ env.DT_path }}
          sed -i 's/TW_INCLUDE_CRYPTO := true/TW_INCLUDE_CRYPTO := false/g' BoardConfig.mk
          sed -i 's/TW_INCLUDE_CRYPTO_FBE := true/TW_INCLUDE_CRYPTO_FBE := false/g' BoardConfig.mk


      - name: Setup ccache
        uses: alexjurkiewicz/setup-ccache@master
        if: env.Enable_ccache == 'true' && !cancelled()
        with:
          max-size: 5G
          extra-config: |
            keep_comments_cpp = true

      - name: Building ${{env.Rec_name}}
        run: |
          cd ${{env.WorkSpace}}
          export ALLOW_MISSING_DEPENDENCIES=true; . build/envsetup.sh; lunch omni_${{ env.device }}-eng; mka ${{env.target}}
        shell: bash

      - name: Get info
        id: info
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d-%H-%M")"
          echo "::set-output name=OutFolder::"${{env.WorkSpace}}/out/target/product/${{ env.device }}""
        shell: bash

      - name: Show out tree
        run: |
          cd ${{steps.info.outputs.OutFolder}}
          ls -la
          tree
          sudo zip -r9 ${{env.Rec_name}}_for_${{ env.device }}_by_${{ env.Author }}.zip recovery.img
          tree -C -L 5

      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        # if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: ${{env.Rec_name}}_for_${{ env.device }}-${{ github.run_id }}
          path: ${{steps.info.outputs.OutFolder}}/*.img

      - name: Upload Release
        uses: softprops/action-gh-release@master
        with:
          files: |
            ${{steps.info.outputs.OutFolder}}/${{env.Rec_name}}_for_${{ env.device }}_by_${{ env.Author }}.zip
            ${{steps.info.outputs.OutFolder}}/*.img
          name: ${{env.Rec_name}}-${{ env.device }}-${{ github.run_id }}
          tag_name: ${{ env.device }}-${{env.Rec_name}}-${{ steps.info.outputs.date }}
          body: |
            ${{env.Rec_name}}-${{env.Rec_ver}} for ${{ env.device }} build at ${{ steps.info.outputs.date }}
            Download link :https://download.fastgit.org/zerorooot/Actions-Build-TWRP-For-Elish/releases/download/${{ env.device }}-${{env.Rec_name}}-${{ steps.info.outputs.date }}/${{env.Rec_name}}_for_${{ env.device }}_by_${{ env.Author }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.TWRP_TOKEN }}
